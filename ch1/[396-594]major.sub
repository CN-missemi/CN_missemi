{45480}{45553}有些时候调试起来简直要命
{45554}{45685}一般来讲，调试的时候直觉会时不时地失效
{45686}{45854}就像我们之前看到的 `foo` 命令不存在
{45854}{46019}因此我们在讲义里有一个很高效的工具
{46020}{46100}这个工具叫做 shellcheck 
{46101}{46134}链接已经放在讲义里了
{46135}{46214}它能给出 warning 和语法错误
{46215}{46303}还能指出哪些地方你没正确引用
{46304}{46398}或者是哪些地方你的空格打错了
{46420}{46485}举个很简单的例子
{46486}{46598}`mcd.sh` 这个文件，我们得到了一些错误提示
{46599}{46684}这些提示说：「嗨！我们惊奇地发现漏掉了一些东西」
{46685}{46814}这可能导致 `mcd.sh` 在别的系统无法解译成功
{46835}{46922}并且， `cd` 后面有一个指令
{46923}{47022}而 `cd` 可能不会被正确执行
{47023}{47057}这里你可能想用 `cd ... || exit` 
{47058}{47232}之类的东西来代替它
{47233}{47288}回到这行命令
{47289}{47438}如果 `cd` 命令没有正确结束
{47439}{47487}你就不能进入那个文件夹
{47488}{47586}因为要么你没有权限，要么文件夹不存在
{47587}{47723}之后程序会给你一个非零的错误码
{47724}{47824}然后你就会执行 `exit` 命令，停止脚本的运行
{47825}{47960}而不是在一个不存在的路径继续执行
{48001}{48080}实际上我还没测试
{48081}{48228}但是我想我们可以试一下 `example.sh`
{48229}{48311}这里它告诉我们
{48312}{48422}应该用另外一种方法检查错误码
{48423}{48547}原来写的大概不能很好地达到目的
{48605}{48679}最后一点，我想说的是
{48680}{48819}当你编写这些 bash 脚本或者函数的时候
{48820}{48872}写你要运行的 bash 脚本
{48873}{49025}和写要载入 Shell 的东西
{49026}{49089}这两者是有区别的
{49090}{49277}我们将会在命令行环境那一讲里了解这些差别
{49278}{49403}同时那一讲会用到 `bashrc` 和 `sshrc` 这两种工具
{49418}{49462}但是，总的来说
{49463}{49545}如果你做了一些改动，比如你的路径
{49546}{49618}比方说你 cd 到了一个 bash 脚本
{49619}{49679}并且你直接运行它
{49690}{49765}它就不会 `cd` 到 Shell 当前的路径
{49794}{49911}但是如果你直接通过 Shell 加载 bash 代码
{49912}{50074}比如你的函数，然后你运行这些函数
{50075}{50139}这个操作就有相反的副作用
{50140}{50258}在 Shell 中定义变量也是一样
{50345}{50573}现在我会讲一些和 Shell 搭配干活不累的工具
{50615}{50697}第一个昨天已经着重讲过了
{50698}{50847}怎么去知道 flag 和 command（命令）具体代表什么
{50848}{50954}就像我现在知道 `ls -l` 
{50955}{51045}会用列表的形式列出文件
{51046}{51199}或者我运行 `mv -i` 它会给我提示
{51212}{51279}你现在能用的就是 man 命令
{51280}{51455}man 命令会给出很多关于命令的信息
{51456}{51598}比如说在这解释了 `-i` 的作用
{51599}{51671}这些就是你能做的全部操作
{51721}{51944}不仅是系统内封装的简单命令
{51945}{52075}对于一些从网上安装的工具也很方便
{52076}{52216}例如，如果安装完一些工具
{52217}{52291}那么 man 要用的文档也安装好了
{52292}{52455}比如我们要运行这个叫 ripgrep 的工具
{52456}{52537}它可以用 `rg` 调用
{52566}{52611}系统里并没有自带这个工具
{52612}{52714}但是它安装了自己的 man 文档
{52715}{52747}并且我可以查看
{52825}{52913}对有些命令来说， man 命令直截了当
{52914}{53000}但有时，理解 man 调出来的文档也挺头疼
{53001}{53202}因为它涵盖了这个工具所有的文档和描述
{53203}{53400}有的时候会有样例，但有的时候没有
{53401}{53561}比如我经常用的一些优秀工具
{53562}{53622}像 convert 和 ffmpeg
{53623}{53693}虽然他们处理图像或视频很优秀
{53694}{53755}但是他们的 man 文档都是庞然大物
{53756}{53878}然后有个好东西叫 `tldr`，你可以装一下
