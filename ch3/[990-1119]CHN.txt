【990】那我大概就可以把它们删了

那我现在想把这个列表整干净些

这是一个多行的列表

那我先 `grep nightly`

然后我把最新版的 `nightly` 排除掉

用 `-v` 来表示不匹配它

好现在这些 `nightly` 都带着日期

我只想要 2019 年的*
* 就没有 2020 年的（小声

那现在我想把这一个个工具链

从我的电脑里删掉

我可以复制粘贴进命令里

`rustup toolchain remove`

好像是 `uninstall`

那我可以手动的输入这些文件名

也可以复制粘贴

但是我都整出来列表了啊（全恼）

那要不这样吧

我用 `sed` 把这些后缀去掉

然后用 `xarg` 来把输入转成参数

这里我想让它变成这个命令的参数

那么按照我的习惯

这里加了个 `echo` 

就可以看到它将会干些什么*
*别一不小心把家扬了

啊这输出没太大用

并不是很好读*
*其实还行吧...

至少你能看出来

删掉 `echo` 之后

将会执行 `rustup toolchain uninstall`

然后后面是 `nightly` 版本

作为参数传给程序

【1022】那我一跑这个命令

它就会把这些工具链删了

那我就不用一个个复制粘贴了

那这就是数据处理

在辅助其他工作上的应用

它在观察数据本身之上更进了一步

它把一种形式的数据

转换成了另一种

你还可以处理二进制数据

而图像、视频等

就是一个很好的例子

你可以拿它们来整点有趣的活

例如有个工具叫 `ffmpeg`

它是用来编解码视频的工具

也可以整点图像活

我现在把它的日志级别

设成 `panic` 

不然它会输出超多东西

我想让它从 `/dev/video0`

也就是从我的摄像头输入

然后把第一帧拿出来

也就是拍个照

然后输出成一张图

而不是一个单帧的视频

我想让它输出到 `stdout`

【1046】一般用 `-` 就告诉程序

从标准流来输入输出

而不要用文件

那在这个命令里 

`-` 就代表 `stdout`

然后我想把它用管道

接到 `convert` 这个图像处理软件上

我想让 `convert` 

从 `stdin` 输入

然后把图片转成灰度的

然后把输出写到 `stdout` 里

然后接到 `gzip` 

它也会用标准流来输入输出

然后我会把它接到

远程计算机上

在那上面解码

然后把图像存个副本

复习一下

【1066】`tee` 会从 `stdin` 输入

然后输出到文件和 `stdout`

那这样我们就得到了一份

以 `png` 格式保存的

解码过的图像副本

然后回到本地的流

我们让它在图片查看器里

显示出来

看看能不能用

【1075】瓦！

好 这张图绕过我的服务器

然后又由管道传回来了

此外服务器上

理论上

有这张图解码后的副本

来看看有没有

`scp copy.png` 到我这里

啊这

这样呢

看！完  全  一  致

它  工  作  ！

这是个简单的例子

但是你会见识到

这样 `pipe` 的强大之处

它不一定要是文本

但是会从一种格式

转换成另一种

如果想要的话

我可以 `cat /dev/video0`

然后把它用管道接到

Anish 的服务器上

他就可以把它

接到视频播放器上

然后在他的机器上看视频了

【1095】只要知道有这么个操作就好 #REVIEW deletes "if we wanted to"

今天有许多的练习可以做

有些呢会用到一些数据源

像是 MacOS 和 Linux 的日志

然后我们会告诉你用哪些命令

你可以自己玩一下

但是记住

用什么数据源并不重要

更重要的是找些

你觉得有意思的数据源

然后从里面找出有意思的东西

这些练习的重点在这里

星期一马丁路德金日不上课

下一节课周二

我们讲命令行环境

现在讲的这些

有些什么疑问吗

管道啊 正则啊 

正则这东西真的值得好好看看

它太好用了

在编程方面也很好用

如果有问题

~~办公室找我~~*
*找不到

【1119】我会帮你的
