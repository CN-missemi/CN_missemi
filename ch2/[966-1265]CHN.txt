【966】 那么，这些是 Vim 的修饰符

我猜我们讲过这些了

好吧，好像没讲过

如果我敲 `da(` 进去

它就会删除括号里的内容，也包括括号

所以说 i 是 inside 

 a 是 around 或者是 including 的意思

【972】 好，所以这基本就是你在 Vim 的接口里

把不同东西结合到一起的效果

那么，现在还有关于这些理念

或者是接口就是编程语言这个纲领的问题吗

好，那为了展示这个编辑器的强大

我们快速演示一遍

这能让我们体会到这个工具有多快

【981】 并且快到我们想要的速度

好，看这里有一个啥也没输出的坏掉的 fizz_buzz

额，但愿你们都听说过 fizz Buzz

如果没听说过的话，我会简单说几嘴

【987】 fizz buzz 是一种输出从 1 到 n 的练习

当数字能被 3 整除时，输出 fizz

当数字能被 5 整除时，输出 buzz 

当数字同时被 3 和 5 整除时， 输出 fizz buzz 

如果这些条件都没满足，就直接输出数字

所以，你的输出看上去应该长这样 1, 2, fizz, 4, buzz 

【996】 但是，如果我运行这个程序，它啥也没输出

我把程序放在左边，终端放在右边

好，现在这里有一堆问题

其中一个就是 main 函数从来没被调用过

那我们就开始修这个锅

现在看好我是怎么修这个锅的

注意我需要按哪些键

大写 G 把光标跳到文件底

【1005】 o 在下面新建一行

现在我就可以往里输入内容了

也就是说我现在处在 insert mode

我已经输入了一些东西了，我想回到 normal mode 

如果我键入 `:w` 

好，我们就回到了 command mode 

我们再回到那个地方

好，至少现在咱的程序运行的时候输出了些东西了

这个程序还有另一个问题

【1013】 它是从 0 开始的，而不是 1

咱再来修修这个锅

我想在这个范围里跑这个程序

对，就这玩意

它不该从 0 开始一直到 limit 

它应该从 1 开始到 limit + 1 

我还没给你们看在 Vim 中怎么搜索

那咱按下 `/` 

额，把这个关掉重启一遍

如果你按下 `/` ，它就开始搜索

【1023】 如果我输入 range 

我的光标会从当前位置挪到第一个 range 那

这样就可以把你光标高效地挪到你想挪的地方

`ww` 继续挪两个字符

`i` 进入 insert mode 

添加 `1, ` 然后按 esc 回到 normal mode 

【1030】 这是 Vim 里面一个很普遍的模式

你先待在 normal mode 里

然后把光标挪到某个地方，进入 insert mode

做一点小改动，然后再用 esc 回到 normal mode

normal mode 就像是家一样 #REVIEW home译成家还是主目录

这大概就是你呆的时间最长的地方

我还想加上一个 +1

那就用 e 挪到这个词后面

摁 a 来加上 +1 然后按 esc 退出

【1039】 好，我们已经解决了这个问题

这程序还有个毛病

就是被 3 和 5 整除的时候输出的都是 fizz 

咱再来解决下这个问题

用 `/fizz` 来找出 fizz 

然后按 n 来找到下一个匹配的结果

再用 `ci'` 来改变两个单引号中间的内容

它就删除了 fizz 然后进入 insert mode 

然后我就可以随便输入我想输进去的东西

【1049】 然后再按下 esc 回到 normal mode 

好极了，我们解决掉了这个问题

这程序还有另一个问题

当数字是 15 的倍数时

它在独立的两行输出 fizz 和 buzz 

【1053】 我们再来修一下这个锅

先把光标往下移动到这一行

我实际上并不担心程序的内容有啥问题

有些程序写的很蠢，但这并不重要

注意我在 Vim 中按下的那些按键

【1060】 这些按键让我在 Vim 中高效的修改程序

现在我的光标在这一行

我按下 $ 来把光标移动到行尾

按下 i 来进入 insert mode 

然后把这些东西输入进去

按 esc 来回到 normal mode 

【1066】 现在我想在 print 下面也这么改

请你跟我这样做[*]， `jj.`
*我就跟你这样做

在 Vim 中，按下 . 会再来一次之前的改动

要想实现重复的动作，这是个好办法

【1072】 还不用一遍遍的重复输入相同的内容

上次它插入了 `, end=''`

所以当我按下 . 时，它就会在这一行再来一遍

【1076】 我想这个程序的最终模型就是

我们把这些问题全给解决了

并且还应该引入一个命令行参数

而不是用写死在程序里的这个 10

【1082】 那接下来我按 gg 来回到顶上

用大写 O 在上面新建一行

然后我会输入 `import sys` ，回车

然后再用 esc 键回到 normal mode 

然后我想把光标挪到 10 那个地方

那我就 `/10` ，这样我就直接到那去了

【1089】 用 `ci(` 来在括号里面编辑

现在我就可以把我想要的输入进去了

做完这些，我的程序就能好好的 fizzbuzz 了

我想我还有一个地方没改，但这已经不重要了

这已经能说明你可以迅速的做出许多改动了

【1097】 那么，关于这个例子

还有我们讲的这种思路还有什么问题吗

我不懂怎么分清哪个是 Vim 的窗口 #REVIEW

这个大概会在周二详细地讲

我会把 Vim 放在左边， shell 放在右边

然后外边的是  #REVIEW

关于这个问题，你可能还想问些别的

【1104】 比如怎么在不同的 Vim 窗口之间切换

你可以在这一讲的讲义里找到答案
